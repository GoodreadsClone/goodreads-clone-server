type Book {
  id: ID!
  title: String!
  author: Author
  rating: Int
  isbn: String!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  books: [Book]
  wantToReads: [Book]
  currentlyReading: Book
}

type Author {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  books: [Book]
}

type Comment {
  id: ID!
  userId: ID!
  bookId: ID!
  comment: String!
}

type BucketList{
  id: ID
  user: User
  book: Book
  timeStamp: String
}

type Query {
  books: [Book]
  users: [User]
  authors: [Author]
}

type Query {
  book(id: ID!): Book
  user(email: String!): User
  author(id: ID!): Author
}

type Mutation {
  addUser(firstName: String!, lastName: String!, email: String!, password: String!): User
  addBook(title: String!, isbn: String!, authorId: Int!, rating: Float!): Book
  addBookToBucketList(userId:Int!, bookId:Int!): BucketList
  updateCurrentBook(userId:Int!, bookId:Int!): User
  addCurrentlyReading(userId: Int!, bookId: Int!): User
}
